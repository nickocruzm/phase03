State 79 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: function
    3          | functions function

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    5 declarations: /* empty */
    6             | declarations declaration

    7 declaration: identifiers COLON INTEGER SEMICOLON
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER SEMICOLON
    9            | identifiers COLON ENUM L_PAREN enum_list R_PAREN SEMICOLON

   10 identifiers: IDENTIFIER
   11            | identifiers COMMA IDENTIFIER

   12 enum_list: IDENTIFIER
   13          | enum_list COMMA IDENTIFIER

   14 statements: /* empty */
   15           | statements statement

   16 statement: var ASSIGN expression SEMICOLON
   17          | IF bool_expr THEN statements ENDIF opt_semi
   18          | IF bool_expr THEN statements ELSE statements ENDIF opt_semi
   19          | WHILE bool_expr BEGINLOOP statements ENDLOOP opt_semi
   20          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr SEMICOLON
   21          | FOREACH IDENTIFIER IN IDENTIFIER BEGINLOOP statements ENDLOOP opt_semi
   22          | READ vars SEMICOLON
   23          | WRITE vars SEMICOLON
   24          | CONTINUE SEMICOLON
   25          | RETURN expression SEMICOLON

   26 opt_semi: /* empty */
   27         | SEMICOLON

   28 vars: var
   29     | var COMMA vars

   30 bool_expr: relation_and_expr
   31          | bool_expr OR relation_and_expr

   32 relation_and_expr: relation_expr
   33                  | relation_and_expr AND relation_expr

   34 relation_expr: expression comp expression
   35              | NOT expression comp expression
   36              | NOT L_PAREN bool_expr R_PAREN
   37              | L_PAREN bool_expr R_PAREN
   38              | expression
   39              | TRUE
   40              | FALSE

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | LTE
   45     | GT
   46     | GTE

   47 expression: multiplicative_expr
   48           | expression PLUS multiplicative_expr
   49           | expression MINUS multiplicative_expr

   50 multiplicative_expr: term
   51                    | multiplicative_expr MULT term
   52                    | multiplicative_expr DIV term
   53                    | multiplicative_expr MOD term

   54 term: var
   55     | NUMBER
   56     | L_PAREN expression R_PAREN
   57     | MINUS term
   58     | IDENTIFIER L_PAREN expressions R_PAREN

   59 var: IDENTIFIER
   60    | IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   61 expressions: /* empty */
   62            | expression
   63            | expressions COMMA expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 4 10 11 12 13 21 58 59 60
NUMBER (259) 8 55
FUNCTION (260) 4
BEGINPARAMS (261) 4
ENDPARAMS (262) 4
BEGINLOCALS (263) 4
ENDLOCALS (264) 4
BEGINBODY (265) 4
ENDBODY (266) 4
INTEGER (267) 7 8
ARRAY (268) 8
OF (269) 8
IF (270) 17 18
THEN (271) 17 18
ELSE (272) 18
ENDIF (273) 17 18
WHILE (274) 19 20
DO (275) 20
BEGINLOOP (276) 19 20 21
ENDLOOP (277) 19 20 21
CONTINUE (278) 24
READ (279) 22
WRITE (280) 23
FOREACH (281) 21
IN (282) 21
RETURN (283) 25
ASSIGN (284) 16
SEMICOLON (285) 4 7 8 9 16 20 22 23 24 25 27
COLON (286) 7 8 9
COMMA (287) 11 13 29 63
L_PAREN (288) 9 36 37 56 58
R_PAREN (289) 9 36 37 56 58
L_SQUARE_BRACKET (290) 8 60
R_SQUARE_BRACKET (291) 8 60
PLUS (292) 48
MINUS (293) 49 57
MULT (294) 51
DIV (295) 52
MOD (296) 53
EQ (297) 41
NEQ (298) 42
LT (299) 43
LTE (300) 44
GT (301) 45
GTE (302) 46
AND (303) 33
OR (304) 31
NOT (305) 35 36
TRUE (306) 39
FALSE (307) 40
ENUM (308) 9
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 3
function (58)
    on left: 4, on right: 2 3
declarations (59)
    on left: 5 6, on right: 4 6
declaration (60)
    on left: 7 8 9, on right: 6
identifiers (61)
    on left: 10 11, on right: 7 8 9 11
enum_list (62)
    on left: 12 13, on right: 9 13
statements (63)
    on left: 14 15, on right: 4 15 17 18 19 20 21
statement (64)
    on left: 16 17 18 19 20 21 22 23 24 25, on right: 15
opt_semi (65)
    on left: 26 27, on right: 17 18 19 21
vars (66)
    on left: 28 29, on right: 22 23 29
bool_expr (67)
    on left: 30 31, on right: 17 18 19 20 31 36 37
relation_and_expr (68)
    on left: 32 33, on right: 30 31 33
relation_expr (69)
    on left: 34 35 36 37 38 39 40, on right: 32 33
comp (70)
    on left: 41 42 43 44 45 46, on right: 34 35
expression (71)
    on left: 47 48 49, on right: 16 25 34 35 38 48 49 56 60 62 63
multiplicative_expr (72)
    on left: 50 51 52 53, on right: 47 48 49 51 52 53
term (73)
    on left: 54 55 56 57 58, on right: 50 51 52 53 57
var (74)
    on left: 59 60, on right: 16 28 29 54
expressions (75)
    on left: 61 62 63, on right: 58 63


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNCTION . IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENTIFIER  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: functions .
    3 functions: functions . function

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


state 4

    2 functions: function .

    $default  reduce using rule 2 (functions)


state 5

    4 function: FUNCTION IDENTIFIER . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 functions: functions function .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENTIFIER SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    $default  reduce using rule 5 (declarations)

    declarations  go to state 10


state 10

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY
    6 declarations: declarations . declaration

    IDENTIFIER  shift, and go to state 11
    ENDPARAMS   shift, and go to state 12

    declaration  go to state 13
    identifiers  go to state 14


state 11

   10 identifiers: IDENTIFIER .

    $default  reduce using rule 10 (identifiers)


state 12

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 15


state 13

    6 declarations: declarations declaration .

    $default  reduce using rule 6 (declarations)


state 14

    7 declaration: identifiers . COLON INTEGER SEMICOLON
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER SEMICOLON
    9            | identifiers . COLON ENUM L_PAREN enum_list R_PAREN SEMICOLON
   11 identifiers: identifiers . COMMA IDENTIFIER

    COLON  shift, and go to state 16
    COMMA  shift, and go to state 17


state 15

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    $default  reduce using rule 5 (declarations)

    declarations  go to state 18


state 16

    7 declaration: identifiers COLON . INTEGER SEMICOLON
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER SEMICOLON
    9            | identifiers COLON . ENUM L_PAREN enum_list R_PAREN SEMICOLON

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20
    ENUM     shift, and go to state 21


state 17

   11 identifiers: identifiers COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


state 18

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY
    6 declarations: declarations . declaration

    IDENTIFIER  shift, and go to state 11
    ENDLOCALS   shift, and go to state 23

    declaration  go to state 13
    identifiers  go to state 14


state 19

    7 declaration: identifiers COLON INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 24


state 20

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER SEMICOLON

    L_SQUARE_BRACKET  shift, and go to state 25


state 21

    9 declaration: identifiers COLON ENUM . L_PAREN enum_list R_PAREN SEMICOLON

    L_PAREN  shift, and go to state 26


state 22

   11 identifiers: identifiers COMMA IDENTIFIER .

    $default  reduce using rule 11 (identifiers)


state 23

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 27


state 24

    7 declaration: identifiers COLON INTEGER SEMICOLON .

    $default  reduce using rule 7 (declaration)


state 25

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER SEMICOLON

    NUMBER  shift, and go to state 28


state 26

    9 declaration: identifiers COLON ENUM L_PAREN . enum_list R_PAREN SEMICOLON

    IDENTIFIER  shift, and go to state 29

    enum_list  go to state 30


state 27

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    $default  reduce using rule 14 (statements)

    statements  go to state 31


state 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER SEMICOLON

    R_SQUARE_BRACKET  shift, and go to state 32


state 29

   12 enum_list: IDENTIFIER .

    $default  reduce using rule 12 (enum_list)


state 30

    9 declaration: identifiers COLON ENUM L_PAREN enum_list . R_PAREN SEMICOLON
   13 enum_list: enum_list . COMMA IDENTIFIER

    COMMA    shift, and go to state 33
    R_PAREN  shift, and go to state 34


state 31

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY
   15 statements: statements . statement

    IDENTIFIER  shift, and go to state 35
    ENDBODY     shift, and go to state 36
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    DO          shift, and go to state 39
    CONTINUE    shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    FOREACH     shift, and go to state 43
    RETURN      shift, and go to state 44

    statement  go to state 45
    var        go to state 46


state 32

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER SEMICOLON

    OF  shift, and go to state 47


state 33

   13 enum_list: enum_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 48


state 34

    9 declaration: identifiers COLON ENUM L_PAREN enum_list R_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 49


state 35

   59 var: IDENTIFIER .
   60    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 50

    $default  reduce using rule 59 (var)


state 36

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


state 37

   17 statement: IF . bool_expr THEN statements ENDIF opt_semi
   18          | IF . bool_expr THEN statements ELSE statements ENDIF opt_semi

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 53
    MINUS       shift, and go to state 54
    NOT         shift, and go to state 55
    TRUE        shift, and go to state 56
    FALSE       shift, and go to state 57

    bool_expr            go to state 58
    relation_and_expr    go to state 59
    relation_expr        go to state 60
    expression           go to state 61
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 38

   19 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP opt_semi

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 53
    MINUS       shift, and go to state 54
    NOT         shift, and go to state 55
    TRUE        shift, and go to state 56
    FALSE       shift, and go to state 57

    bool_expr            go to state 65
    relation_and_expr    go to state 59
    relation_expr        go to state 60
    expression           go to state 61
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 39

   20 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr SEMICOLON

    BEGINLOOP  shift, and go to state 66


state 40

   24 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 67


state 41

   22 statement: READ . vars SEMICOLON

    IDENTIFIER  shift, and go to state 35

    vars  go to state 68
    var   go to state 69


state 42

   23 statement: WRITE . vars SEMICOLON

    IDENTIFIER  shift, and go to state 35

    vars  go to state 70
    var   go to state 69


state 43

   21 statement: FOREACH . IDENTIFIER IN IDENTIFIER BEGINLOOP statements ENDLOOP opt_semi

    IDENTIFIER  shift, and go to state 71


state 44

   25 statement: RETURN . expression SEMICOLON

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    expression           go to state 73
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 45

   15 statements: statements statement .

    $default  reduce using rule 15 (statements)


state 46

   16 statement: var . ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 74


state 47

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER SEMICOLON

    INTEGER  shift, and go to state 75


state 48

   13 enum_list: enum_list COMMA IDENTIFIER .

    $default  reduce using rule 13 (enum_list)


state 49

    9 declaration: identifiers COLON ENUM L_PAREN enum_list R_PAREN SEMICOLON .

    $default  reduce using rule 9 (declaration)


state 50

   60 var: IDENTIFIER L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    expression           go to state 76
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 51

   58 term: IDENTIFIER . L_PAREN expressions R_PAREN
   59 var: IDENTIFIER .
   60    | IDENTIFIER . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 77
    L_SQUARE_BRACKET  shift, and go to state 50

    $default  reduce using rule 59 (var)


state 52

   55 term: NUMBER .

    $default  reduce using rule 55 (term)


state 53

   37 relation_expr: L_PAREN . bool_expr R_PAREN
   56 term: L_PAREN . expression R_PAREN

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 53
    MINUS       shift, and go to state 54
    NOT         shift, and go to state 55
    TRUE        shift, and go to state 56
    FALSE       shift, and go to state 57

    bool_expr            go to state 78
    relation_and_expr    go to state 59
    relation_expr        go to state 60
    expression           go to state 79
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 54

   57 term: MINUS . term

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    term  go to state 80
    var   go to state 64


state 55

   35 relation_expr: NOT . expression comp expression
   36              | NOT . L_PAREN bool_expr R_PAREN

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 81
    MINUS       shift, and go to state 54

    expression           go to state 82
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 56

   39 relation_expr: TRUE .

    $default  reduce using rule 39 (relation_expr)


state 57

   40 relation_expr: FALSE .

    $default  reduce using rule 40 (relation_expr)


state 58

   17 statement: IF bool_expr . THEN statements ENDIF opt_semi
   18          | IF bool_expr . THEN statements ELSE statements ENDIF opt_semi
   31 bool_expr: bool_expr . OR relation_and_expr

    THEN  shift, and go to state 83
    OR    shift, and go to state 84


state 59

   30 bool_expr: relation_and_expr .
   33 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 85

    $default  reduce using rule 30 (bool_expr)


state 60

   32 relation_and_expr: relation_expr .

    $default  reduce using rule 32 (relation_and_expr)


state 61

   34 relation_expr: expression . comp expression
   38              | expression .
   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    EQ     shift, and go to state 88
    NEQ    shift, and go to state 89
    LT     shift, and go to state 90
    LTE    shift, and go to state 91
    GT     shift, and go to state 92
    GTE    shift, and go to state 93

    $default  reduce using rule 38 (relation_expr)

    comp  go to state 94


state 62

   47 expression: multiplicative_expr .
   51 multiplicative_expr: multiplicative_expr . MULT term
   52                    | multiplicative_expr . DIV term
   53                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 47 (expression)


state 63

   50 multiplicative_expr: term .

    $default  reduce using rule 50 (multiplicative_expr)


state 64

   54 term: var .

    $default  reduce using rule 54 (term)


state 65

   19 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP opt_semi
   31 bool_expr: bool_expr . OR relation_and_expr

    BEGINLOOP  shift, and go to state 98
    OR         shift, and go to state 84


state 66

   20 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr SEMICOLON

    $default  reduce using rule 14 (statements)

    statements  go to state 99


state 67

   24 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 24 (statement)


state 68

   22 statement: READ vars . SEMICOLON

    SEMICOLON  shift, and go to state 100


state 69

   28 vars: var .
   29     | var . COMMA vars

    COMMA  shift, and go to state 101

    $default  reduce using rule 28 (vars)


state 70

   23 statement: WRITE vars . SEMICOLON

    SEMICOLON  shift, and go to state 102


state 71

   21 statement: FOREACH IDENTIFIER . IN IDENTIFIER BEGINLOOP statements ENDLOOP opt_semi

    IN  shift, and go to state 103


state 72

   56 term: L_PAREN . expression R_PAREN

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    expression           go to state 104
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 73

   25 statement: RETURN expression . SEMICOLON
   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr

    SEMICOLON  shift, and go to state 105
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87


state 74

   16 statement: var ASSIGN . expression SEMICOLON

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    expression           go to state 106
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 75

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 107


state 76

   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr
   60 var: IDENTIFIER L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 108
    PLUS              shift, and go to state 86
    MINUS             shift, and go to state 87


state 77

   58 term: IDENTIFIER L_PAREN . expressions R_PAREN

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    $default  reduce using rule 61 (expressions)

    expression           go to state 109
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64
    expressions          go to state 110


state 78

   31 bool_expr: bool_expr . OR relation_and_expr
   37 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 111
    OR       shift, and go to state 84


state 79

   34 relation_expr: expression . comp expression
   38              | expression .
   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr
   56 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112
    PLUS     shift, and go to state 86
    MINUS    shift, and go to state 87
    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    LT       shift, and go to state 90
    LTE      shift, and go to state 91
    GT       shift, and go to state 92
    GTE      shift, and go to state 93

    R_PAREN   [reduce using rule 38 (relation_expr)]
    $default  reduce using rule 38 (relation_expr)

    comp  go to state 94


state 80

   57 term: MINUS term .

    $default  reduce using rule 57 (term)


state 81

   36 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   56 term: L_PAREN . expression R_PAREN

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 53
    MINUS       shift, and go to state 54
    NOT         shift, and go to state 55
    TRUE        shift, and go to state 56
    FALSE       shift, and go to state 57

    bool_expr            go to state 113
    relation_and_expr    go to state 59
    relation_expr        go to state 60
    expression           go to state 79
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 82

   35 relation_expr: NOT expression . comp expression
   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    EQ     shift, and go to state 88
    NEQ    shift, and go to state 89
    LT     shift, and go to state 90
    LTE    shift, and go to state 91
    GT     shift, and go to state 92
    GTE    shift, and go to state 93

    comp  go to state 114


state 83

   17 statement: IF bool_expr THEN . statements ENDIF opt_semi
   18          | IF bool_expr THEN . statements ELSE statements ENDIF opt_semi

    $default  reduce using rule 14 (statements)

    statements  go to state 115


state 84

   31 bool_expr: bool_expr OR . relation_and_expr

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 53
    MINUS       shift, and go to state 54
    NOT         shift, and go to state 55
    TRUE        shift, and go to state 56
    FALSE       shift, and go to state 57

    relation_and_expr    go to state 116
    relation_expr        go to state 60
    expression           go to state 61
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 85

   33 relation_and_expr: relation_and_expr AND . relation_expr

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 53
    MINUS       shift, and go to state 54
    NOT         shift, and go to state 55
    TRUE        shift, and go to state 56
    FALSE       shift, and go to state 57

    relation_expr        go to state 117
    expression           go to state 61
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 86

   48 expression: expression PLUS . multiplicative_expr

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    multiplicative_expr  go to state 118
    term                 go to state 63
    var                  go to state 64


state 87

   49 expression: expression MINUS . multiplicative_expr

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    multiplicative_expr  go to state 119
    term                 go to state 63
    var                  go to state 64


state 88

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


state 89

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


state 90

   43 comp: LT .

    $default  reduce using rule 43 (comp)


state 91

   44 comp: LTE .

    $default  reduce using rule 44 (comp)


state 92

   45 comp: GT .

    $default  reduce using rule 45 (comp)


state 93

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


state 94

   34 relation_expr: expression comp . expression

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    expression           go to state 120
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 95

   51 multiplicative_expr: multiplicative_expr MULT . term

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    term  go to state 121
    var   go to state 64


state 96

   52 multiplicative_expr: multiplicative_expr DIV . term

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    term  go to state 122
    var   go to state 64


state 97

   53 multiplicative_expr: multiplicative_expr MOD . term

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    term  go to state 123
    var   go to state 64


state 98

   19 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP opt_semi

    $default  reduce using rule 14 (statements)

    statements  go to state 124


state 99

   15 statements: statements . statement
   20 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr SEMICOLON

    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    DO          shift, and go to state 39
    ENDLOOP     shift, and go to state 125
    CONTINUE    shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    FOREACH     shift, and go to state 43
    RETURN      shift, and go to state 44

    statement  go to state 45
    var        go to state 46


state 100

   22 statement: READ vars SEMICOLON .

    $default  reduce using rule 22 (statement)


state 101

   29 vars: var COMMA . vars

    IDENTIFIER  shift, and go to state 35

    vars  go to state 126
    var   go to state 69


state 102

   23 statement: WRITE vars SEMICOLON .

    $default  reduce using rule 23 (statement)


state 103

   21 statement: FOREACH IDENTIFIER IN . IDENTIFIER BEGINLOOP statements ENDLOOP opt_semi

    IDENTIFIER  shift, and go to state 127


state 104

   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr
   56 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112
    PLUS     shift, and go to state 86
    MINUS    shift, and go to state 87


state 105

   25 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 25 (statement)


state 106

   16 statement: var ASSIGN expression . SEMICOLON
   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr

    SEMICOLON  shift, and go to state 128
    PLUS       shift, and go to state 86
    MINUS      shift, and go to state 87


state 107

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER SEMICOLON .

    $default  reduce using rule 8 (declaration)


state 108

   60 var: IDENTIFIER L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 60 (var)


state 109

   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr
   62 expressions: expression .

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87

    $default  reduce using rule 62 (expressions)


state 110

   58 term: IDENTIFIER L_PAREN expressions . R_PAREN
   63 expressions: expressions . COMMA expression

    COMMA    shift, and go to state 129
    R_PAREN  shift, and go to state 130


state 111

   37 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_expr)


state 112

   56 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term)


state 113

   31 bool_expr: bool_expr . OR relation_and_expr
   36 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 131
    OR       shift, and go to state 84


state 114

   35 relation_expr: NOT expression comp . expression

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    expression           go to state 132
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 115

   15 statements: statements . statement
   17 statement: IF bool_expr THEN statements . ENDIF opt_semi
   18          | IF bool_expr THEN statements . ELSE statements ENDIF opt_semi

    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 37
    ELSE        shift, and go to state 133
    ENDIF       shift, and go to state 134
    WHILE       shift, and go to state 38
    DO          shift, and go to state 39
    CONTINUE    shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    FOREACH     shift, and go to state 43
    RETURN      shift, and go to state 44

    statement  go to state 45
    var        go to state 46


state 116

   31 bool_expr: bool_expr OR relation_and_expr .
   33 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 85

    $default  reduce using rule 31 (bool_expr)


state 117

   33 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 33 (relation_and_expr)


state 118

   48 expression: expression PLUS multiplicative_expr .
   51 multiplicative_expr: multiplicative_expr . MULT term
   52                    | multiplicative_expr . DIV term
   53                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 48 (expression)


state 119

   49 expression: expression MINUS multiplicative_expr .
   51 multiplicative_expr: multiplicative_expr . MULT term
   52                    | multiplicative_expr . DIV term
   53                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 49 (expression)


state 120

   34 relation_expr: expression comp expression .
   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87

    $default  reduce using rule 34 (relation_expr)


state 121

   51 multiplicative_expr: multiplicative_expr MULT term .

    $default  reduce using rule 51 (multiplicative_expr)


state 122

   52 multiplicative_expr: multiplicative_expr DIV term .

    $default  reduce using rule 52 (multiplicative_expr)


state 123

   53 multiplicative_expr: multiplicative_expr MOD term .

    $default  reduce using rule 53 (multiplicative_expr)


state 124

   15 statements: statements . statement
   19 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP opt_semi

    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    DO          shift, and go to state 39
    ENDLOOP     shift, and go to state 135
    CONTINUE    shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    FOREACH     shift, and go to state 43
    RETURN      shift, and go to state 44

    statement  go to state 45
    var        go to state 46


state 125

   20 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr SEMICOLON

    WHILE  shift, and go to state 136


state 126

   29 vars: var COMMA vars .

    $default  reduce using rule 29 (vars)


state 127

   21 statement: FOREACH IDENTIFIER IN IDENTIFIER . BEGINLOOP statements ENDLOOP opt_semi

    BEGINLOOP  shift, and go to state 137


state 128

   16 statement: var ASSIGN expression SEMICOLON .

    $default  reduce using rule 16 (statement)


state 129

   63 expressions: expressions COMMA . expression

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 72
    MINUS       shift, and go to state 54

    expression           go to state 138
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 130

   58 term: IDENTIFIER L_PAREN expressions R_PAREN .

    $default  reduce using rule 58 (term)


state 131

   36 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 36 (relation_expr)


state 132

   35 relation_expr: NOT expression comp expression .
   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87

    $default  reduce using rule 35 (relation_expr)


state 133

   18 statement: IF bool_expr THEN statements ELSE . statements ENDIF opt_semi

    $default  reduce using rule 14 (statements)

    statements  go to state 139


state 134

   17 statement: IF bool_expr THEN statements ENDIF . opt_semi

    SEMICOLON  shift, and go to state 140

    $default  reduce using rule 26 (opt_semi)

    opt_semi  go to state 141


state 135

   19 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP . opt_semi

    SEMICOLON  shift, and go to state 140

    $default  reduce using rule 26 (opt_semi)

    opt_semi  go to state 142


state 136

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr SEMICOLON

    IDENTIFIER  shift, and go to state 51
    NUMBER      shift, and go to state 52
    L_PAREN     shift, and go to state 53
    MINUS       shift, and go to state 54
    NOT         shift, and go to state 55
    TRUE        shift, and go to state 56
    FALSE       shift, and go to state 57

    bool_expr            go to state 143
    relation_and_expr    go to state 59
    relation_expr        go to state 60
    expression           go to state 61
    multiplicative_expr  go to state 62
    term                 go to state 63
    var                  go to state 64


state 137

   21 statement: FOREACH IDENTIFIER IN IDENTIFIER BEGINLOOP . statements ENDLOOP opt_semi

    $default  reduce using rule 14 (statements)

    statements  go to state 144


state 138

   48 expression: expression . PLUS multiplicative_expr
   49           | expression . MINUS multiplicative_expr
   63 expressions: expressions COMMA expression .

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87

    $default  reduce using rule 63 (expressions)


state 139

   15 statements: statements . statement
   18 statement: IF bool_expr THEN statements ELSE statements . ENDIF opt_semi

    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 37
    ENDIF       shift, and go to state 145
    WHILE       shift, and go to state 38
    DO          shift, and go to state 39
    CONTINUE    shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    FOREACH     shift, and go to state 43
    RETURN      shift, and go to state 44

    statement  go to state 45
    var        go to state 46


state 140

   27 opt_semi: SEMICOLON .

    $default  reduce using rule 27 (opt_semi)


state 141

   17 statement: IF bool_expr THEN statements ENDIF opt_semi .

    $default  reduce using rule 17 (statement)


state 142

   19 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP opt_semi .

    $default  reduce using rule 19 (statement)


state 143

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr . SEMICOLON
   31 bool_expr: bool_expr . OR relation_and_expr

    SEMICOLON  shift, and go to state 146
    OR         shift, and go to state 84


state 144

   15 statements: statements . statement
   21 statement: FOREACH IDENTIFIER IN IDENTIFIER BEGINLOOP statements . ENDLOOP opt_semi

    IDENTIFIER  shift, and go to state 35
    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    DO          shift, and go to state 39
    ENDLOOP     shift, and go to state 147
    CONTINUE    shift, and go to state 40
    READ        shift, and go to state 41
    WRITE       shift, and go to state 42
    FOREACH     shift, and go to state 43
    RETURN      shift, and go to state 44

    statement  go to state 45
    var        go to state 46


state 145

   18 statement: IF bool_expr THEN statements ELSE statements ENDIF . opt_semi

    SEMICOLON  shift, and go to state 140

    $default  reduce using rule 26 (opt_semi)

    opt_semi  go to state 148


state 146

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr SEMICOLON .

    $default  reduce using rule 20 (statement)


state 147

   21 statement: FOREACH IDENTIFIER IN IDENTIFIER BEGINLOOP statements ENDLOOP . opt_semi

    SEMICOLON  shift, and go to state 140

    $default  reduce using rule 26 (opt_semi)

    opt_semi  go to state 149


state 148

   18 statement: IF bool_expr THEN statements ELSE statements ENDIF opt_semi .

    $default  reduce using rule 18 (statement)


state 149

   21 statement: FOREACH IDENTIFIER IN IDENTIFIER BEGINLOOP statements ENDLOOP opt_semi .

    $default  reduce using rule 21 (statement)
